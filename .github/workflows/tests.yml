name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run tests
        run: cargo test

  server-client-tests:
    name: Run server-client test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Run server
        run: cargo run -r --bin server & sleep 2

      - name: Run client
        run: cargo run -r --bin client 10 10 4 5

      - name: Kill Server (Important!)
        if: always() # Ensure this runs even if previous steps fail
        run: pkill server # Or use a more specific command if needed

  build:
    name: Build Release and Pack
    runs-on: ubuntu-latest
    needs: [unit-tests, server-client-tests]

    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Build Release
        run: cargo build --release

      - name: Create distribution directory
        run: mkdir -p matrix-client-server

      - name: Copy executables
        run: cp target/release/{client,server} matrix-client-server

      - name: Create zip archive
        run: zip -r matrix-client-server.zip matrix-client-server

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: matrix-client-server
          path: matrix-client-server.zip
